{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/09-24-algorithm-1/","result":{"data":{"site":{"siteMetadata":{"title":"코알 데브 로그","author":"SeongRyeong Kim"}},"markdownRemark":{"id":"3e0c1ba6-a036-509e-a7c8-c6d1fef9a679","excerpt":"문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight…","html":"<h1>문제 설명</h1>\n<p>트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.</p>\n<p>※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.</p>\n<p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</p>\n<table>\n<thead>\n<tr>\n<th>경과 시간</th>\n<th>다리를 지난 트럭</th>\n<th>다리를 건너는 트럭</th>\n<th>대기 트럭</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>[]</td>\n<td>[]</td>\n<td>[7,4,5,6]</td>\n</tr>\n<tr>\n<td>1~2</td>\n<td>[]</td>\n<td>[7]</td>\n<td>[4,5,6]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[7]</td>\n<td>[4]</td>\n<td>[5,6]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[7]</td>\n<td>[4,5]</td>\n<td>[6]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[7,4]</td>\n<td>[5]</td>\n<td>[6]</td>\n</tr>\n<tr>\n<td>6~7</td>\n<td>[7,4,5]</td>\n<td>[6]</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>\n<p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.</p>\n<p>solution 함수의 매개변수로 다리 길이 bridgelength, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truckweights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.</p>\n<h2>제한 조건</h2>\n<ul>\n<li>bridge_length는 1 이상 10,000 이하입니다.</li>\n<li>weight는 1 이상 10,000 이하입니다.</li>\n<li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li>\n<li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>bridge_length</th>\n<th>weight</th>\n<th>truck_weights</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>10</td>\n<td>[7,4,5,6]</td>\n<td>8</td>\n</tr>\n<tr>\n<td>100</td>\n<td>100</td>\n<td>[10]</td>\n<td>101</td>\n</tr>\n<tr>\n<td>100</td>\n<td>100</td>\n<td>[10,10,10,10,10,10,10,10,10,10]</td>\n<td>110</td>\n</tr>\n</tbody>\n</table>\n<h1>나의 풀이</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    pending <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      weight<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//다리 위 전체 무게</span>\n      list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 진입한 차 리스트 {time:진입시점, val:무게}</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pending<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>truck_weights<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//다리 위에 있는 차도 없고, 진입 대기 중인 차도 없는 경우 answer return</span>\n      <span class=\"token keyword\">return</span> answer\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">}</span>\n    answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pending<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pending<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+</span> bridge_length <span class=\"token operator\">===</span> answer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//다리 위의 가장 첫번째 차가 진입한 시간에서 다리 길이 만큼 시간이 지나갔을 경우</span>\n        pending<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">-=</span> pending<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>val\n        <span class=\"token comment\">//해당 차는 제거</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>weight <span class=\"token operator\">>=</span> pending<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//현재 다리에 진입된 무게에 새차가 올라서도 괜찮은 경우</span>\n        <span class=\"token keyword\">let</span> weight <span class=\"token operator\">=</span> truck_weights<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        pending<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          time<span class=\"token operator\">:</span> answer<span class=\"token punctuation\">,</span>\n          val<span class=\"token operator\">:</span> weight<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        pending<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">+=</span> weight\n        <span class=\"token comment\">//다리 위에 차 한 대 더 추가</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Queue를 생각하면서 풀었지만 Queue는 배열로 대체 했다.</p>","frontmatter":{"title":"프로그래머스 다리를 지나는 트럭(javascript)","date":"September 24, 2019","tags":["algorithm","javascript","프로그래머스"]}}},"pageContext":{"slug":"/2019/09-24-algorithm-1/","previous":{"fields":{"slug":"/2019/09-24-algorithm-3/"},"frontmatter":{"title":"프로그래머스 조이스틱(javascript)"}},"next":{"fields":{"slug":"/2019/09-25-algorithm-1/"},"frontmatter":{"title":"프로그래머스 베스트앨범(javascript)"}}}}}