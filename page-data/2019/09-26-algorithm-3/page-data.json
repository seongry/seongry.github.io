{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/09-26-algorithm-3/","result":{"data":{"site":{"siteMetadata":{"title":"코알 데브 로그","author":"SeongRyeong Kim"}},"markdownRemark":{"id":"ac4a6be8-77d8-5666-b5ad-181abc6ca937","excerpt":"문제 설명 괄호가 바르게 짝지어졌다는 것은 ’(’ 문자로 열렸으면 반드시 짝지어서 ’)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어 ()() 또는 (())() 는 올바른 괄호입니다. )()( 또는 (()( 는 올바르지 않은 괄호입니다. ’(’ 또는 ’)’ 로만 이루어진 문자열 s…","html":"<h1>문제 설명</h1>\n<p>괄호가 바르게 짝지어졌다는 것은 ’(’ 문자로 열렸으면 반드시 짝지어서 ’)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어</p>\n<ul>\n<li>()() 또는 (())() 는 올바른 괄호입니다.</li>\n<li>)()( 또는 (()( 는 올바르지 않은 괄호입니다.</li>\n</ul>\n<p>’(’ 또는 ’)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.</p>\n<h2>제한사항</h2>\n<ul>\n<li>문자열 s의 길이 : 100,000 이하의 자연수</li>\n<li>문자열 s는 ’(’ 또는 ’)’ 로만 이루어져 있습니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>()()</td>\n<td>true</td>\n</tr>\n<tr>\n<td>(())()</td>\n<td>true</td>\n</tr>\n<tr>\n<td>)()(</td>\n<td>false</td>\n</tr>\n<tr>\n<td>(()(</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>입출력 예 설명</h3>\n<p>입출력 예 #1,2,3,4</p>\n<p>문제의 예시와 같습니다.</p>\n<h1>나의 풀이</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"(\"</span> <span class=\"token operator\">?</span> sum<span class=\"token operator\">++</span> <span class=\"token operator\">:</span> sum<span class=\"token operator\">--</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> sum <span class=\"token operator\">===</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>”(“가 나올땐 +1, ”)“가 나왔을 땐 -1로 계산하면서</p>\n<p>한번이라도 ”)“가 ”(“보다 많아지거나 혹은 전체 계산값이 0이 아닌 경우엔 false로 처리했다.</p>","frontmatter":{"title":"프로그래머스 올바른 괄호(javascript)","date":"September 26, 2019","tags":["algorithm","javascript","프로그래머스"]}}},"pageContext":{"slug":"/2019/09-26-algorithm-3/","previous":{"fields":{"slug":"/2019/09-26-algorithm-2/"},"frontmatter":{"title":"프로그래머스 단어 변환(javascript)"}},"next":{"fields":{"slug":"/2019/09-26-algorithm-1/"},"frontmatter":{"title":"프로그래머스 네트워크(javascript)"}}}}}