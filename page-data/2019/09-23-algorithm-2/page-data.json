{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/09-23-algorithm-2/","result":{"data":{"site":{"siteMetadata":{"title":"코알 데브 로그","author":"SeongRyeong Kim"}},"markdownRemark":{"id":"1cc923b6-795a-5d40-9b05-0a0ef052cac9","excerpt":"문제 설명\n수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다. 예를 들어 높이가 6, 9, 5, 7,…","html":"<p>문제 설명\n수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.</p>\n<p>예를 들어 높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발사합니다. 그러면, 탑은 다음과 같이 신호를 주고받습니다. 높이가 4인 다섯 번째 탑에서 발사한 신호는 높이가 7인 네 번째 탑이 수신하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신합니다. 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신할 수 없습니다.</p>\n<table>\n<thead>\n<tr>\n<th>송신 탑(높이)</th>\n<th>수신 탑(높이)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5(4)</td>\n<td>4(7)</td>\n</tr>\n<tr>\n<td>4(7)</td>\n<td>2(9)</td>\n</tr>\n<tr>\n<td>3(5)</td>\n<td>2(9)</td>\n</tr>\n<tr>\n<td>2(9)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>1(6)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>맨 왼쪽부터 순서대로 탑의 높이를 담은 배열 heights가 매개변수로 주어질 때 각 탑이 쏜 신호를 어느 탑에서 받았는지 기록한 배열을 return 하도록 solution 함수를 작성해주세요.</p>\n<p>제한 사항\nheights는 길이 2 이상 100 이하인 정수 배열입니다.\n모든 탑의 높이는 1 이상 100 이하입니다.\n신호를 수신하는 탑이 없으면 0으로 표시합니다.\n입출력 예</p>\n<table>\n<thead>\n<tr>\n<th>heights</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[6,9,5,7,4]</td>\n<td>[0,0,2,2,4]</td>\n</tr>\n<tr>\n<td>[3,9,9,3,5,7,2]</td>\n<td>[0,0,0,3,3,3,6]</td>\n</tr>\n<tr>\n<td>[1,5,3,6,7,6,5]</td>\n<td>[0,0,2,0,0,5,6]</td>\n</tr>\n</tbody>\n</table>\n<p>입출력 예 설명\n입출력 예 #1\n앞서 설명한 예와 같습니다.</p>\n<p>입출력 예 #2</p>\n<p>[1,2,3] 번째 탑이 쏜 신호는 아무도 수신하지 않습니다.\n[4,5,6] 번째 탑이 쏜 신호는 3번째 탑이 수신합니다.\n[7] 번째 탑이 쏜 신호는 6번째 탑이 수신합니다.</p>\n<p>입출력 예 #3</p>\n<p>[1,2,4,5] 번째 탑이 쏜 신호는 아무도 수신하지 않습니다.\n[3] 번째 탑이 쏜 신호는 2번째 탑이 수신합니다.\n[6] 번째 탑이 쏜 신호는 5번째 탑이 수신합니다.\n[7] 번째 탑이 쏜 신호는 6번째 탑이 수신합니다.</p>\n<h1>나의 풀이</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> heights<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">top<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> limit <span class=\"token operator\">=</span> heights<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> val <span class=\"token operator\">=</span> limit<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">></span> top<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> val <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> limit<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> val <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>더 깔끔하게 다듬고 싶었지만 여기서 더 다듬을 수 없어서 아쉽다.</p>","frontmatter":{"title":"프로그래머스 탑(javascript)","date":"September 23, 2019","tags":["algorithm","javascript","프로그래머스"]}}},"pageContext":{"slug":"/2019/09-23-algorithm-2/","previous":{"fields":{"slug":"/2019/08-21-after-read-software-craftman/"},"frontmatter":{"title":"소프트웨어 장인의 감상문 및 요약"}},"next":{"fields":{"slug":"/2019/09-23-algorithm-1/"},"frontmatter":{"title":"프로그래머스 완주하지 못한 선수(javascript)"}}}}}