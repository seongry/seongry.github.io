{"version":3,"sources":["webpack:///./src/components/PostList.js","webpack:///./src/templates/PostList.js","webpack:///./src/components/Bio.js"],"names":["PostListBox","styled","section","Post","article","Title","div","TitleText","h3","PostDate","theme","colors","bluegray","PostList","posts","map","index","node","title","frontmatter","fields","slug","key","style","boxShadow","to","dangerouslySetInnerHTML","__html","description","excerpt","date","PaginationBox","PaginationLink","Link","purple","PaginationIcon","span","white","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","Layout","location","keywords","Bio","allMarkdownRemark","edges","rel","className","React","Component","Description","Author","Nickname","p","SelfProduce","query","bioQuery","author"],"mappings":"yLAIMA,EAAcC,IAAOC,QAAV,2EAAGD,CAAH,kBAIXE,EAAOF,IAAOG,QAAV,oEAAGH,CAAH,oCAMJI,EAAQJ,IAAOK,IAAV,qEAAGL,CAAH,2BAGLM,EAAYN,IAAOO,GAAV,yEAAGP,CAAH,+DAKTQ,EAAWR,IAAOK,IAAV,wEAAGL,CAAH,gDAGH,qBAAGS,MAAkBC,OAAOC,YAG1BC,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,kBAACd,EAAD,KACGc,EAAMC,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,IAAKN,EAAOO,MAAO,CAAEC,UAAU,QAAWC,GAAIR,EAAKG,OAAOC,MAC9D,kBAAClB,EAAD,CAAMmB,IAAKL,EAAKG,OAAOC,MACrB,kBAAChB,EAAD,KACE,kBAACE,EAAD,KAAYW,IAGd,uBACEQ,wBAAyB,CACvBC,OAAQV,EAAKE,YAAYS,aAAeX,EAAKY,WAGjD,kBAACpB,EAAD,KAAWQ,EAAKE,YAAYW,a,YCrCpCC,EAAgB9B,IAAOK,IAAV,8EAAGL,CAAH,iDAIb+B,EAAiB/B,YAAOgC,QAAV,+EAAGhC,CAAH,2BACE,qBAAGS,MAAkBC,OAAOuB,UAE5CC,EAAiBlC,IAAOmC,KAAV,+EAAGnC,CAAH,8CACT,qBAAGS,MAAkBC,OAAO0B,SAIjCC,E,kGACJC,OAAA,WAAU,IAAD,EACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAa3B,MACzC,EAAkCuB,KAAKC,MAAMI,YAArCC,EAAR,EAAQA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IAFf,EAAqBG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAACE,EAAA,EAAD,CAAQC,SAAUd,KAAKC,MAAMa,SAAUrC,MAAOyB,GAC5C,kBAAC,IAAD,CACEzB,MAAM,YACNsC,SAAU,CAAC,OAAD,iCAEZ,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAU3C,MAAK,UAAE0B,EAAKkB,kBAAkBC,aAAzB,QAAkC,KACjD,kBAAC5B,EAAD,MACIiB,GACA,kBAAChB,EAAD,CAAgBP,GAAI0B,EAAUS,IAAI,QAChC,kBAACzB,EAAD,CAAgB0B,UAAU,kBAA1B,eAKJ,+BACEZ,GACA,kBAACjB,EAAD,CAAgBP,GAAI4B,EAAUO,IAAI,QAChC,kBAACzB,EAAD,CAAgB0B,UAAU,kBAA1B,qB,GA7BUC,IAAMC,WAwCfzB,a,kCC5Df,mFAWMgB,EAASrD,IAAOK,IAAV,kEAAGL,CAAH,uCAIN+D,EAAc/D,IAAOK,IAAV,uEAAGL,CAAH,uDAKXgE,EAAShE,IAAOK,IAAV,kEAAGL,CAAH,MACNiE,EAAWjE,IAAOkE,EAAV,oEAAGlE,CAAH,+DAMRmE,EAAcnE,IAAOkE,EAAV,uEAAGlE,CAAH,eAIJwD,EAAM,WACjB,OACE,kBAAC,cAAD,CACEY,MAAOC,EACP/B,OAAQ,SAAAC,GACN,IAAQ+B,EAAW/B,EAAKI,KAAKC,aAArB0B,OACR,OACE,kBAACjB,EAAD,KACE,kBAACU,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,aADF,KAC8BK,EAD9B,KAGA,kBAACH,EAAD,sDAWRE,EAAQ","file":"component---src-templates-post-list-js-3970f349eefc47715391.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst PostListBox = styled.section`\n  flex-grow: 1;\n`;\n\nconst Post = styled.article`\n  padding: 2rem 1rem;\n  p {\n    margin: 0;\n  }\n`;\nconst Title = styled.div`\n  margin-bottom: 0.5rem;\n`;\nconst TitleText = styled.h3`\n  font-size: 2rem;\n  margin: 0;\n  font-family: \"IBMPlexSansKR-Bold\";\n`;\nconst PostDate = styled.div`\n  font-size: 1rem;\n  text-align: right;\n  color: ${({ theme }) => theme.colors.bluegray};\n`;\n\nexport const PostList = ({ posts }) => {\n  return (\n    <PostListBox>\n      {posts.map(({ node }, index) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <Link key={index} style={{ boxShadow: `none` }} to={node.fields.slug}>\n            <Post key={node.fields.slug}>\n              <Title>\n                <TitleText>{title}</TitleText>\n              </Title>\n\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n              <PostDate>{node.frontmatter.date}</PostDate>\n            </Post>\n          </Link>\n        );\n      })}\n    </PostListBox>\n  );\n};\n","import { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Bio } from \"../components/Bio\";\nimport { Layout } from \"../components/Layout\";\nimport { PostList } from \"../components/PostList\";\nimport SEO from \"../components/Seo\";\n\nconst PaginationBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst PaginationLink = styled(Link)`\n  background-color: ${({ theme }) => theme.colors.purple};\n`;\nconst PaginationIcon = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 2rem;\n  padding: 0.5rem;\n`;\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const { currentPage, numPages } = this.props.pageContext;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages;\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString();\n    const nextPage = (currentPage + 1).toString();\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        <PostList posts={data.allMarkdownRemark.edges ?? []} />\n        <PaginationBox>\n          {!isFirst && (\n            <PaginationLink to={prevPage} rel=\"prev\">\n              <PaginationIcon className=\"material-icons\">\n                arrow_back\n              </PaginationIcon>\n            </PaginationLink>\n          )}\n          <div />\n          {!isLast && (\n            <PaginationLink to={nextPage} rel=\"next\">\n              <PaginationIcon className=\"material-icons\">\n                arrow_forward\n              </PaginationIcon>\n            </PaginationLink>\n          )}\n        </PaginationBox>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { nin: \"NOT_READY\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Layout = styled.div`\n  display: flex;\n  padding: 2.5rem 16px;\n`;\nconst Description = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n`;\nconst Author = styled.div``;\nconst Nickname = styled.p`\n  display: inline;\n  margin: 0;\n  font-weight: 900;\n  font-size: 1.3rem;\n`;\nconst SelfProduce = styled.p`\n  margin: 0;\n`;\n\nexport const Bio = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <Layout>\n            <Description>\n              <Author>\n                <Nickname>KOAL</Nickname> ({author})\n              </Author>\n              <SelfProduce>\n                좋은 글 쓰고 싶고 꾸준히 성장하고 싶은 Frontend 개발자 입니다\n              </SelfProduce>\n            </Description>\n          </Layout>\n        );\n      }}\n    />\n  );\n};\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}